{"version":3,"sources":["firebase.js","components/Login.jsx","components/Signup.jsx","components/Form.jsx","redux/actions/userAction.js","redux/actions/detailsAction.js","redux/actions/templateActions.js","components/TemplateBreakDown/Name.jsx","components/TemplateBreakDown/Contacts.jsx","components/TemplateBreakDown/ProfessionalSummary.jsx","components/TemplateBreakDown/EducationDetail.jsx","components/TemplateBreakDown/ExperienceDetail.jsx","components/TemplateBreakDown/Skills.jsx","components/ActualTemplate.jsx","components/PublicPreview.jsx","redux/actions/saveActions.js","components/DashboardResmeTemplate.jsx","components/Profile.jsx","components/Templates.jsx","components/EducationInput.jsx","redux/actions/educationAction.js","components/ExperienceInput.jsx","redux/actions/experienceAction.js","redux/actions/updateResumeAction.js","components/OptionalButtonsResume.jsx","components/Preview.jsx","components/PersonalData.jsx","redux/actions/skillsAction.js","App.js","redux/reducers/detailsReducer.js","redux/reducers/educationReducer.js","redux/reducers/experienceReducer.js","redux/reducers/saveReducer.js","redux/reducers/skillReducers.js","redux/reducers/templateReducer.js","redux/reducers/updateResumeReducer.js","redux/reducers/userReducer.js","redux/CombinedReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","firestore","Login","useState","password","setPassword","email","setEmail","className","type","placeholder","aria-label","aria-describedby","value","onChange","e","currentTarget","class","onClick","signInWithEmailAndPassword","signInWithPopup","Signup","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","Form","whichForm","setForm","user","useSelector","state","to","createuser","payload","detailCreator","details","templateCreator","code","Name","firstName","lastName","templateCode","Contacts","phone","ProfessionalSummary","summary","EducationDetail","education","map","ed","schoolname","year","degree","ExperienceDetail","experience","ex","jobTitle","startDate","endDate","description","Skills","skill","sk","ActualTemplate","length","PublicPreview","rid","useParams","dispatch","useDispatch","useEffect","collection","doc","get","then","data","saveCompleteCreator","id","DashboardResmeTemplate","props","history","useHistory","isVisible","setVisibility","onMouseEnter","onMouseLeave","alert","push","a","deleteResume","Profile","datas","setData","where","uid","querysnapshot","docs","dataArr","i","console","log","resumeid","delete","newDatas","filter","Templates","src","EducationInput","setSchoolname","setDegree","setYear","isAdded","setStatus","ednumber","edNumber","ed-number","Number","getAttribute","educationAdd","ExperienceInput","setJobTitle","setDescription","setStartDate","setEndDate","exNumber","ex-number","exnumber","updateResumeCreator","OptionalButtonsResume","saveState","isPublic","update","catch","err","updateErrorCreator","updateResume","add","docRef","saveErrorCreator","saveResume","checked","for","Preview","PersonalData","currskill","setSkill","skills","skillsindet","onKeyDown","key","cs","onDoubleClick","innerText","App","unsub","onAuthStateChanged","exists","set","data-toggle","data-target","aria-controls","aria-expanded","signOut","href","path","initialState","detailsReducer","action","educationReducer","ns","s","experienceReducer","loading","error","skillReducer","st","templateReducer","userReducer","rootReducer","combineReducers","updateState","mystore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.7201a829.chunk.js","sourcesContent":["import firebase from \"../../reels/node_modules/firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBeFuRSOGW0Ry5t6axgVcwBQMTJB0RLlHA\",\r\n    authDomain: \"resume-builder-98dbf.firebaseapp.com\",\r\n    projectId: \"resume-builder-98dbf\",\r\n    storageBucket: \"resume-builder-98dbf.appspot.com\",\r\n    messagingSenderId: \"226987504170\",\r\n    appId: \"1:226987504170:web:66851176ba03687176c953\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nlet provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () =>{\r\n    auth.signInWithPopup(provider);\r\n}\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\n","import { useState } from \"react\";\r\nimport { auth,signInWithGoogle } from \"../firebase\";\r\nimport \"./css/Login.css\";\r\nlet Login = () =>{\r\n    let [password,setPassword] = useState(\"\");\r\n    let [email,setEmail] = useState(\"\");\r\n\r\n    \r\n    return(\r\n        <div className = \"login-container\">\r\n\r\n            <div className = \"text-display\">Welcome back!</div>\r\n            <div className=\"input-group \">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Email address\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {email}\r\n                onChange = {(e)=>{\r\n                    setEmail(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {password}\r\n                onChange = {(e)=>{\r\n                    setPassword(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary login-button\"\r\n            onClick = {()=>{\r\n               auth.signInWithEmailAndPassword(email,password);\r\n            }}>Login</button>\r\n            <button type=\"button\" class=\"btn btn-primary google-button\"\r\n            onClick={()=>{\r\n                signInWithGoogle();\r\n            }}>Sign in with Google</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import { useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nlet Signup = () =>{\r\n    let [password,setPassword] = useState(\"\");\r\n    let [confirmPassword,setConfirmPassword] = useState(\"\");\r\n    let [email,setEmail] = useState(\"\");\r\n\r\n    return(\r\n        <div className = \"login-container\">\r\n\r\n            <div className = \"text-display\">Register and Build</div>\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control email-input\" placeholder=\"Email address\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {email}\r\n                onChange = {(e)=>{\r\n                    setEmail(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control password-input\" placeholder=\"Password\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {password}\r\n                onChange = {(e)=>{\r\n                    setPassword(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control password-input\" placeholder=\"Confirm password\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {confirmPassword}\r\n                onChange = {(e)=>{\r\n                    setConfirmPassword(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary login-button\"\r\n            onClick = {()=>{\r\n                if(password !== \"\" && password === confirmPassword){\r\n                    auth.createUserWithEmailAndPassword(email,password);\r\n                }\r\n            }}>Signup</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import { useState } from \"react\"\r\nimport \"./css/Form.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Login from \"./Login\"\r\nimport Signup from \"./Signup\"\r\nimport {Redirect} from \"react-router-dom\"\r\nlet Form = () =>{\r\n    let [whichForm,setForm] = useState(\"login\");\r\n    let user = useSelector(state => state.user);\r\n    return(\r\n        <>\r\n        {user?<Redirect to = \"/home\"/>:\"\"}\r\n        <div className = \"form-container\">\r\n            <div className = \"form-display\"></div>\r\n            <div className = \"form-section\">\r\n                <div className = \"option-section\">\r\n                    <div className = {`login-option option ${whichForm == \"login\"?\"selected-option\" : \"\"}`}\r\n                        onClick = {\r\n                            ()=>{\r\n                                setForm(\"login\");\r\n                            }\r\n                        }>Login</div>\r\n                    <div className = {`signup-option option ${whichForm == \"signup\"?\"selected-option\" : \"\"}`}\r\n                        onClick = {\r\n                            ()=>{\r\n                                setForm(\"signup\");\r\n                            }\r\n                        }>Signup</div>\r\n                </div>\r\n\r\n                {whichForm == \"login\"? <Login></Login> : <Signup></Signup>}\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","export const createuser = (user)=>{\r\n    return({\r\n        type : \"SET_USER\",\r\n        payload : user,\r\n    })\r\n}\r\n\r\n","export const detailCreator = (details) => {\r\n    return {\r\n      type: \"SET_DETAILS\",\r\n      payload: details,\r\n    };\r\n};","export const templateCreator = (code)=>{\r\n    return({\r\n        type : \"SET_TEMPLATE\",\r\n        payload : code,\r\n    })\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nlet Name = () =>{\r\n\r\n    let {firstName,lastName} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className = {`resume-name template-${templateCode}`}>\r\n            <span>{firstName + \" \" + lastName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Name;","import { useSelector } from \"react-redux\";\r\n\r\nlet Contacts = () =>{\r\n    let {email,phone} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className = {`employee-contacts`}>\r\n            <span>{email}</span>\r\n            {email === \"\" || phone === \"\"?\"\": <span> | </span>}\r\n            <span>{phone}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import { useSelector } from \"react-redux\"\r\n\r\nlet ProfessionalSummary = () =>{\r\n    let {summary} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">{templateCode ===\"A\"?\"Summary\":\"Professional Summary\"}</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            \r\n            <div className = \"detail\">{summary}</div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ProfessionalSummary","import { useSelector } from \"react-redux\";\r\n\r\nlet EducationDetail = () =>{\r\n    let {education} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">Education</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            <div className = \"detail-box\">\r\n            {\r\n                education.map((ed) => {\r\n                    return(<>\r\n                        \r\n                        <div className =\"detail-per-box\">\r\n                            <div className=\"detail-heading\">{ed.schoolname}, {ed.year}</div>\r\n                            <div className =\"detail\">{ed.degree}</div>\r\n                        </div>\r\n                        \r\n                            \r\n                        \r\n                        \r\n                    </>)\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationDetail;","import { useSelector } from \"react-redux\";\r\n\r\nlet ExperienceDetail = () =>{\r\n    let {experience} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">Education</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            <div  className = \"detail-box\">\r\n            {\r\n                experience.map((ex) => {\r\n                    return(<>\r\n                        \r\n                        <div className =\"detail-per-box\">\r\n                            <div className=\"detail-heading\">{ex.jobTitle}, {ex.startDate + \"-\" + ex.endDate}</div>\r\n                            <div className =\"detail\">{ex.description}</div>\r\n                        </div>\r\n                        \r\n                            \r\n                        \r\n                        \r\n                    </>)\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceDetail;","import { useSelector } from \"react-redux\";\r\n\r\nlet Skills = () =>{\r\n    let {skill} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">Tech Skills</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            <div className = {`skill-preview-group template-${templateCode}`}>\r\n                {\r\n                    skill.map((sk) => {\r\n                        return(<>\r\n                              <div className ={`skill-preview template-${templateCode}`}>{sk}</div>                          \r\n                        </>)\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills","import \"./css/Preview.css\"\r\nimport Name from \"./TemplateBreakDown/Name\"\r\nimport Contacts from \"./TemplateBreakDown/Contacts\"\r\nimport ProfessionalSummary from \"./TemplateBreakDown/ProfessionalSummary.jsx\"\r\nimport EducationDetail from \"./TemplateBreakDown/EducationDetail.jsx\";\r\nimport \"./TemplateBreakDown/TemplateBreakDown.css\"\r\nimport { useSelector } from \"react-redux\"\r\nimport ExperienceDetail from \"./TemplateBreakDown/ExperienceDetail\";\r\nimport Skills from \"./TemplateBreakDown/Skills\";\r\nlet ActualTemplate = () =>{\r\n    let {summary,education,experience,skill} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className = {`preview-resume template-${templateCode}`}>\r\n            <div className = {`resume-header resume-section template-${templateCode}`}>\r\n                <Name/>\r\n                <Contacts/>\r\n            </div>\r\n            \r\n            <div className ={`resume-body resume-section template-${templateCode}`}> \r\n                {\r\n                    summary === \"\"?\"\":<ProfessionalSummary/>   \r\n                }\r\n                {\r\n                    education.length == 0 ? \"\": <EducationDetail/>\r\n                }\r\n                {\r\n                    experience.length == 0 ? \"\": <ExperienceDetail/>\r\n                }\r\n                {\r\n                    skill.length == 0?\"\":<Skills/>\r\n                }\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActualTemplate;","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { firestore } from \"../firebase\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { templateCreator } from \"../redux/actions/templateActions\";\r\nimport ActualTemplate from \"./ActualTemplate\";\r\n\r\nlet PublicPreview = ()=>{\r\n    let {rid} = useParams();\r\n\r\n    let dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        firestore.collection(\"resumes\").doc(rid).get().then((doc)=>{\r\n            let data = doc.data();\r\n            if(data){\r\n                dispatch(detailCreator({...data.details}));\r\n                dispatch(templateCreator(data.code));\r\n            }\r\n        })\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <div className = \"preview-container-public\">\r\n            <div className = \"editing-preview-resume-container\">\r\n                <ActualTemplate/>\r\n            </div>\r\n            \r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default PublicPreview;","import { firestore } from \"../../firebase\"\r\n\r\nexport const saveResumeCreator = () =>{\r\n    return{\r\n        type : \"SAVE_RESUME\"\r\n    }\r\n}\r\n\r\nexport const saveErrorCreator = (err) =>{\r\n    return{\r\n        type : \"SAVE_ERROR\",\r\n        payload : err,\r\n    }\r\n}\r\nexport const saveCompleteCreator = (id) =>{\r\n    return{\r\n        type : \"SAVE_COMPLETED\",\r\n        payload : id,\r\n    }\r\n}\r\n\r\nexport const saveResume =(uid,details,code)=>{\r\n    return (dispatch) =>{\r\n        dispatch(saveResumeCreator());\r\n\r\n        firestore.collection(\"resumes\").add({\r\n            uid,\r\n            details,\r\n            code\r\n        }).then((docRef)=>{\r\n            return docRef.get();\r\n        }).then((doc)=>{\r\n            dispatch(saveCompleteCreator(doc.id));\r\n        }).catch((err)=>{\r\n            dispatch(saveErrorCreator(err));\r\n        })\r\n    }\r\n}","import { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./css/Preview.css\"\r\nimport \"./TemplateBreakDown/TemplateBreakDown.css\"\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { saveCompleteCreator } from \"../redux/actions/saveActions\";\r\nimport { templateCreator } from \"../redux/actions/templateActions\";\r\nimport { useState } from \"react\";\r\nimport { firestore } from \"../firebase\";\r\n\r\nlet DashboardResmeTemplate = (props) =>{\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let {code,details} = props.data;\r\n    let [isVisible,setVisibility] = useState(false);\r\n    let templateCode = code;\r\n    let {firstName,lastName,email,phone,education,experience,skill,summary} = details;\r\n    return(\r\n        <div className = \"dashboard-preview-resume-container\" \r\n        onMouseEnter = {()=>{\r\n            setVisibility(true);\r\n        }}\r\n        onMouseLeave = {()=>{\r\n            setVisibility(false);\r\n        }}>\r\n        <div className = {`preview-resume template-${templateCode}`}\r\n        >\r\n            <div className = {`resume-header resume-section template-${templateCode}`}>\r\n                <div className = {`resume-name template-${templateCode}`}>\r\n                    <span>{firstName + \" \" + lastName}</span>\r\n                </div>\r\n                <div className = {`employee-contacts`}>\r\n                    <span>{email}</span>\r\n                    {email === \"\" || phone === \"\"?\"\": <span> | </span>}\r\n                    <span>{phone}</span>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className ={`resume-body resume-section template-${templateCode}`}> \r\n                {\r\n                    summary === \"\"?\"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">{templateCode ===\"A\"?\"Summary\":\"Professional Summary\"}</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        \r\n                        <div className = \"detail\">{summary}</div>\r\n                    </div> \r\n                }\r\n                {\r\n                    education.length == 0 ? \"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">Education</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        <div className = \"detail-box\">\r\n                        {\r\n                            education.map((ed) => {\r\n                                return(<>\r\n                                    \r\n                                    <div className =\"detail-per-box\">\r\n                                        <div className=\"detail-heading\">{ed.schoolname}, {ed.year}</div>\r\n                                        <div className =\"detail\">{ed.degree}</div>\r\n                                    </div>\r\n                                    \r\n                                        \r\n                                    \r\n                                    \r\n                                </>)\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    experience.length == 0 ? \"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">Education</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        <div  className = \"detail-box\">\r\n                        {\r\n                            experience.map((ex) => {\r\n                                return(<>\r\n                                    \r\n                                    <div className =\"detail-per-box\">\r\n                                        <div className=\"detail-heading\">{ex.jobTitle}, {ex.startDate + \"-\" + ex.endDate}</div>\r\n                                        <div className =\"detail\">{ex.description}</div>\r\n                                    </div>\r\n                                    \r\n                                        \r\n                                    \r\n                                    \r\n                                </>)\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    skill.length == 0?\"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">Tech Skills</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        <div className = {`skill-preview-group template-${templateCode}`}>\r\n                            {\r\n                                skill.map((sk) => {\r\n                                    return(<>\r\n                                        <div className ={`skill-preview template-${templateCode}`}>{sk}</div>                          \r\n                                    </>)\r\n                                })\r\n                            }\r\n                        </div>\r\n                        \r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n\r\n        {\r\n            !isVisible?\"\":\r\n            <>\r\n                <div className = \"option-button-container\">\r\n                <div className = \"option-button link-button\"\r\n                onClick ={()=>{\r\n                    alert(`localhost:3000/public-preview/${props.data.rid}`);\r\n                }}>\r\n                    <span class=\"material-icons-outlined\">link</span>\r\n                </div>\r\n\r\n                <div className = \"option-button change-button\"\r\n                onClick ={()=>{\r\n                    dispatch(detailCreator({...details}));\r\n                    dispatch(saveCompleteCreator(props.data.rid));\r\n                    dispatch(templateCreator(templateCode))\r\n                    history.push(\"/personaldata\");\r\n                }}>\r\n                    <span class=\"material-icons-outlined\">settings</span>\r\n                </div>\r\n\r\n                <div className = \"option-button delete-button\"\r\n                onClick ={async()=>{\r\n                   props.deleteResume(props.data.rid);\r\n                }}>\r\n                    <span class=\"material-icons-outlined\">delete</span>\r\n                </div>\r\n                </div>\r\n            </>\r\n        }\r\n        </div>\r\n    )\r\n\r\n     \r\n}\r\n\r\nexport default DashboardResmeTemplate;","import { useEffect, useState } from \"react\";\r\nimport \"./css/Dashboard.css\"\r\nimport {firestore} from \"../firebase\"\r\nimport { useSelector } from \"react-redux\";\r\nimport DashboardResmeTemplate from \"./DashboardResmeTemplate\";\r\nimport { Redirect } from \"react-router\";\r\nlet Profile = () =>{\r\n    \r\n    let [datas,setData] = useState(null);\r\n    let user = useSelector(state => state.user);\r\n    useEffect(async()=>{\r\n        if(user){\r\n            let querysnapshot = await  firestore.collection(\"resumes\").where('uid', \"==\" ,user.uid).get();\r\n            let docs = querysnapshot.docs;\r\n            let dataArr = [];\r\n            for(let i = 0;i<docs.length;i++){\r\n                \r\n                dataArr.push({...docs[i].data(),rid:docs[i].id});\r\n            }\r\n            \r\n            setData(dataArr);\r\n            console.log(datas);\r\n        }\r\n        \r\n    },[]);\r\n\r\n    let deleteResume = async(resumeid) =>{\r\n        await firestore.collection(\"resumes\").doc(resumeid).delete();\r\n        let newDatas = datas.filter(data =>{\r\n            return (data.rid != resumeid);\r\n        })\r\n        setData(newDatas);\r\n    }\r\n    return(\r\n        <>\r\n        {user?\"\":<Redirect to =\"/authentication\"/>}\r\n        <div className = \"dashboard-container\">\r\n            {   \r\n            datas && datas.length !=0?\r\n                <>\r\n                {console.log(datas)}\r\n                <div className = \"dashobard-header\">\r\n                    <div>DashBoard</div>\r\n                </div>\r\n                <div className =\"line-breaker\"></div>\r\n\r\n                <div className =\"template-all\">\r\n\r\n                    \r\n                    {\r\n                    datas.map((data)=>{\r\n                        return(\r\n                            <DashboardResmeTemplate data = {data} deleteResume ={deleteResume}/>\r\n                        )\r\n                    })\r\n                    }\r\n                    \r\n\r\n                </div>\r\n            </>\r\n            :\r\n            <div className = \"empty-message\">\r\n                EMPTY DASHBOARD\r\n            </div>\r\n            }\r\n        \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory,Redirect } from \"react-router-dom\";\r\nimport { templateCreator } from \"../redux/actions/templateActions\";\r\nimport \"./css/Templates.css\"\r\nlet Templates = () =>{\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let user = useSelector(state => state.user);\r\n    return(\r\n        <>\r\n        {user?\"\":<Redirect to=\"/authentication\"/>}\r\n        <div className = \"template-container\">\r\n                <div className = \"template template1\" \r\n                onClick={()=>{\r\n                    history.push(\"/personaldata\");\r\n                    dispatch(templateCreator(\"A\"))\r\n                }}>\r\n                    <img src=\"http://localhost:3000/template1.svg\"/>\r\n                </div>\r\n                <div className = \"template template2\"\r\n                onClick={()=>{\r\n                    history.push(\"/personaldata\");\r\n                    dispatch(templateCreator(\"B\"))\r\n                }}>\r\n                    <img src=\"http://localhost:3000/template2.svg\"/>\r\n                </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Templates;","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { educationAdd, educationDelete } from \"../redux/actions/educationAction\";\r\n\r\nlet EducationInput = (props) =>{\r\n    let {education} = useSelector(state => state);\r\n    \r\n    let [schoolname,setSchoolname] = useState(\"\");\r\n    let [degree,setDegree] = useState(\"\");\r\n    let [year,setYear] = useState(\"\");\r\n    let[isAdded,setStatus] = useState(false);\r\n    let dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        console.log(\"try\");\r\n        console.log(education);\r\n        for(let i = 0;i<education.length;i++){\r\n            if(education[i].ednumber == props.edNumber){\r\n                console.log(\"anything\");\r\n                setSchoolname(education[i].schoolname);\r\n                setDegree(education[i].degree);\r\n                setYear(education[i].year);\r\n                setStatus(true);\r\n                break;\r\n            }\r\n        }\r\n    },[]);\r\n    useEffect(()=>{\r\n        console.log(education);\r\n        dispatch(detailCreator({education}));\r\n        \r\n    },[education]);\r\n    return(\r\n        <>\r\n            <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Institution name\"\r\n                value = {schoolname}\r\n                onChange={(e)=>{\r\n                    setSchoolname(e.currentTarget.value);\r\n                }}/>\r\n\r\n            <div className = \"detail-group\">    \r\n           \r\n            \r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Passing year\"\r\n                value = {year}\r\n                onChange={(e)=>{\r\n                    setYear(e.currentTarget.value);\r\n                }}/>\r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Degree\"\r\n               value = {degree}\r\n               onChange={(e)=>{\r\n                   setDegree(e.currentTarget.value);\r\n               }}/>\r\n\r\n\r\n            {\r\n               !isAdded?\r\n                    <div className =\"text-button\"\r\n                    onClick = {()=>{\r\n                        if(schoolname === \"\" || year === \"\" || degree === \"\") return;\r\n                        setStatus(true);\r\n                        dispatch(educationAdd({ednumber:props.edNumber,schoolname,degree,year}));\r\n                    }}>Confirm</div>\r\n                    \r\n                :\r\n\r\n                    <div className =\"text-button delete-text-button\" ed-number ={props.edNumber} \r\n                    onClick = {(e)=>{\r\n                        setDegree(\"\");\r\n                        setSchoolname(\"\");\r\n                        setYear(\"\");\r\n                        \r\n                        setStatus(false);\r\n                        dispatch(educationDelete(Number(e.currentTarget.getAttribute(\"ed-number\"))));\r\n                    }}>Empty</div>\r\n                }\r\n          \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EducationInput;","export const educationAdd = (education)=>{\r\n    return{\r\n        type: \"ADD_EDUCATION\",\r\n        payload:education\r\n    }\r\n}\r\n\r\nexport const educationDelete = (position) =>{\r\n    return{\r\n        type: \"DELETE_EDUCATION\",\r\n        payload: position\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { experienceAdd, experienceDelete } from \"../redux/actions/experienceAction\";\r\n\r\nlet ExperienceInput = (props) =>{\r\n    let [jobTitle,setJobTitle] = useState(\"\");\r\n    let [description,setDescription] = useState(\"\");\r\n    let [startDate,setStartDate] = useState(\"\");\r\n    let [endDate,setEndDate] = useState(\"\");\r\n    let [isAdded,setStatus] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n    let {experience} = useSelector(state => state);\r\n\r\n    useEffect(()=>{\r\n\r\n        for(let i = 0;i<experience.length;i++){\r\n            if(experience[i].ednumber == props.exNumber){\r\n                setJobTitle(experience[i].jobTitle);\r\n                setDescription(experience[i].description);\r\n                setStartDate(experience[i].startDate);\r\n                setEndDate(experience[i].endDate);\r\n                setStatus(true);\r\n                break;\r\n            }\r\n        }\r\n    },[]);\r\n    useEffect(()=>{\r\n        console.log(experience);\r\n        dispatch(detailCreator({experience}));\r\n    },[experience]);\r\n\r\n\r\n    return(\r\n        <>\r\n            <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Job title\"\r\n                value = {jobTitle}\r\n                onChange={(e)=>{\r\n                    setJobTitle(e.currentTarget.value);\r\n                }}/>\r\n\r\n            <textarea type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Summary\"\r\n               value = {description}\r\n               onChange={(e)=>{\r\n                   setDescription(e.currentTarget.value);\r\n               }} />        \r\n            <div className = \"detail-group\">    \r\n           \r\n                \r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Start Date\"\r\n                value = {startDate}\r\n                onChange={(e)=>{\r\n                    setStartDate(e.currentTarget.value);\r\n                }}/>\r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"End Date\"\r\n               value = {endDate}\r\n               onChange={(e)=>{\r\n                   setEndDate(e.currentTarget.value);\r\n               }}/>\r\n\r\n\r\n               {\r\n               !isAdded?\r\n                    <div className =\"text-button\"\r\n                    onClick = {()=>{\r\n                        if(jobTitle === \"\" || description === \"\" || startDate === \"\" || endDate === \"\") return;\r\n                        setStatus(true);\r\n                        dispatch(experienceAdd({exnumber:props.exNumber,jobTitle,description,startDate,endDate}));\r\n                    }}>Confirm</div>\r\n                    \r\n                :\r\n\r\n                    <div className =\"text-button delete-text-button\" ex-number ={props.exNumber} \r\n                    onClick = {(e)=>{\r\n                        setStatus(false);\r\n                        setJobTitle(\"\");\r\n                        setDescription(\"\");\r\n                        setEndDate(\"\");\r\n                        setStartDate(\"\");\r\n                        dispatch(experienceDelete(Number(e.currentTarget.getAttribute(\"ex-number\"))));\r\n                    }}>Remove</div>\r\n                }\r\n          \r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExperienceInput;","export const experienceAdd = (education)=>{\r\n    return{\r\n        type: \"ADD_EXPERIENCE\",\r\n        payload:education\r\n    }\r\n}\r\n\r\nexport const experienceDelete = (position) =>{\r\n    return{\r\n        type: \"DELETE_EXPERIENCE\",\r\n        payload: position\r\n    }\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const updateResumeCreator = () =>{\r\n    return{\r\n        type : \"UPDATE_RESUME\"\r\n    }\r\n}\r\n\r\nexport const updateErrorCreator = (err) =>{\r\n    return{\r\n        type : \"UPDATE_ERROR\",\r\n        payload : err,\r\n    }\r\n}\r\nexport const updateCompleteCreator = () =>{\r\n    return{\r\n        type : \"UPDATE_COMPLETED\",\r\n    }\r\n}\r\n\r\nexport const updateResume = (rid,details,code) =>{\r\n    return (dispatch) =>{\r\n        dispatch(updateResumeCreator);\r\n\r\n        firestore.collection(\"resumes\").doc(rid).update(\r\n            {\r\n                details,\r\n                code,\r\n            }\r\n        ).then(()=>{\r\n            dispatch(updateCompleteCreator());\r\n        }).catch((err)=>{\r\n            dispatch(updateErrorCreator(err));\r\n        })\r\n    }\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { saveResume } from \"../redux/actions/saveActions\";\r\nimport { updateResume } from \"../redux/actions/updateResumeAction\";\r\n\r\nlet OptionalButtonsResume = () =>{\r\n    let dispatch = useDispatch();\r\n\r\n    let details = useSelector(state => state.details);\r\n    let user = useSelector(state => state.user);\r\n    let uid;\r\n    if(user)\r\n        uid = user.uid;\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    let saveState = useSelector(state => state.saveState);\r\n    let isPublic = details.isPublic;\r\n    return(\r\n        <div className = \"optional-buttons\">\r\n            {\r\n                saveState.rid === \"\"?\"\":\r\n                <button type=\"button\" class=\"btn btn-light\"\r\n                    onClick = {\r\n                        ()=>{\r\n                            dispatch(updateResume(saveState.rid,details,templateCode));\r\n                        }\r\n                    }>Save same to Database</button>\r\n            }\r\n            <button type=\"button\" class=\"btn btn-light\"\r\n            onClick = {\r\n                ()=>{\r\n                    dispatch(saveResume(uid,details,templateCode))\r\n                }\r\n            }>Save new to Database</button>\r\n            <button type=\"button\" class=\"btn btn-light\">Download PDF</button>\r\n            {\r\n                !isPublic?\"\":\r\n                <button type=\"button\" class=\"btn btn-light\"\r\n                    onClick ={\r\n                        ()=>{\r\n                            if(saveState.rid === \"\"){\r\n                                alert(\"TO generate Link, Save to database\");\r\n                            }else{\r\n                            alert(`localhost:3000/public-preview/${saveState.rid}`);\r\n                            }\r\n                            \r\n                        }\r\n                    }>Generate Link</button>\r\n            }\r\n            \r\n            <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\"\r\n                checked = {isPublic}\r\n                onClick = {\r\n                    ()=>{\r\n                        let np = isPublic?false:true;\r\n                        dispatch(detailCreator({ isPublic: np}))\r\n                    }\r\n                }/>\r\n                <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                    Make Public\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionalButtonsResume;","import \"./css/Preview.css\"\r\nimport \"./TemplateBreakDown/TemplateBreakDown.css\"\r\nimport OptionalButtonsResume from \"./OptionalButtonsResume\";\r\nimport ActualTemplate from \"./ActualTemplate\";\r\nlet Preview = () =>{\r\n    return(\r\n        <div className = \"preview-container\">\r\n            <div className = \"editing-preview-resume-container\">\r\n                <ActualTemplate></ActualTemplate> \r\n            </div>\r\n            \r\n            <OptionalButtonsResume />        \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport EducationInput from \"./EducationInput\";\r\nimport ExperienceInput from \"./ExperienceInput.jsx\";\r\nimport \"./css/PersonalData.css\"\r\nimport Preview from \"./Preview\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { skillAdd, skillDelete } from \"../redux/actions/skillsAction\";\r\nimport { Redirect } from \"react-router\";\r\nlet PersonalData = ()=>{\r\n    let [currskill,setSkill] = useState(\"\");\r\n    let dispatch = useDispatch();\r\n    let {skills,details} = useSelector(state => state);\r\n    let {firstName,lastName,email,phone,summary} = details;\r\n    let skillsindet = details.skill\r\n    useEffect(()=>{\r\n        dispatch(detailCreator({skill:skills}));\r\n        \r\n    },[skills]);\r\n    let user = useSelector(state => state.user);\r\n    return(\r\n        <>\r\n        {user?\"\":<Redirect to=\"/authentication\"/>}\r\n        <div className=\"personal-container\">\r\n            \r\n            <div className = \"personal-form\">\r\n                \r\n                <div className = \"personal-details detail-section\">\r\n                    <div className = \"heading\">Personal Details</div>\r\n                    <div className = \"detail-group\">\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"First Name\"\r\n                            value = {firstName}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({firstName:e.currentTarget.value}))\r\n                            }}/>\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Last Name\"\r\n                            value = {lastName}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({lastName:e.currentTarget.value}))\r\n                            }}/>\r\n                    </div>\r\n\r\n                    <div className = \"detail-group\">\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Email address\"\r\n                            value = {email}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({email:e.currentTarget.value}))\r\n                            }}/>\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Phone number\"\r\n                            value = {phone}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({phone:e.currentTarget.value}))\r\n                            }}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className = \"summary-professional detail-section\">\r\n                    <div className = \"heading\">Professional summary</div>\r\n                    <textarea type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Description\"\r\n                    value = {summary}\r\n                    onChange={(e)=>{\r\n                        dispatch(detailCreator({summary:e.currentTarget.value}))\r\n                    }}/>\r\n                </div>\r\n\r\n                <div className = \"education detail-section\">\r\n                    <div className = \"heading-and-button\">\r\n                        <div className = \"heading\">Education</div>\r\n                        <div className = \"text-button\" \r\n                        onClick = {()=>{\r\n                            \r\n                        }}>Add more</div>\r\n                    </div>\r\n                    \r\n                    <EducationInput edNumber = {0}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <EducationInput edNumber = {1}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <EducationInput edNumber = {2}/>\r\n                </div>\r\n\r\n                <div className = \"experience detail-section\">\r\n                    <div className = \"heading\">Experience</div>\r\n                    <ExperienceInput exNumber = {0}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <ExperienceInput exNumber = {1}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <ExperienceInput exNumber = {2}/>\r\n                </div>\r\n\r\n                <div className = \"skills detail-section\">\r\n                    <div className = \"heading\">Skills (Upto 15)</div>\r\n                    <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Enter skills\"\r\n                    value = {currskill}\r\n                    onChange={(e)=>{\r\n                        \r\n                        setSkill(e.currentTarget.value);\r\n                    }}\r\n                    \r\n                    onKeyDown = {(e)=>{\r\n                        if(e.key != \"Enter\" || currskill ===\"\") return;\r\n                        if(skills.length >= 15){\r\n                            alert(\"More than 15 skills not allowed\");\r\n                            return;\r\n                        }\r\n                        setSkill(\"\");\r\n                        dispatch(skillAdd(currskill));\r\n                        \r\n                    }}/>\r\n\r\n                    <div className = \"detail-group skill-inputs\">\r\n                        {\r\n                        skillsindet.map((cs)=>{\r\n                            return(\r\n                                <div className =\"skill-div\"\r\n                                onDoubleClick = {\r\n                                    (e)=>{\r\n                                        dispatch(skillDelete(e.currentTarget.innerText));\r\n                                    }\r\n                                }>{cs}</div>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <Preview/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonalData;","export const skillAdd = (skill)=>{\r\n    return{\r\n        type: \"ADD_SKILL\",\r\n        payload:skill\r\n    }\r\n}\r\n\r\nexport const skillDelete = (skill) =>{\r\n    return{\r\n        type: \"DELETE_SKILL\",\r\n        payload: skill\r\n    }\r\n}","import Form from \"./components/Form\";\nimport \"./components/css/App.css\"\nimport { useEffect } from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { auth, firestore } from \"./firebase\";\nimport {createuser} from \"./redux/actions/userAction\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, Link, useHistory } from \"react-router-dom\";\nimport PublicPreview from \"./components/PublicPreview\";\nimport Profile from \"./components/Profile\";\nimport Templates from \"./components/Templates\";\nimport PersonalData from \"./components/PersonalData\";\nimport \"./components/css/NavBar.css\"\nlet App = () => {\n  let dispatch = useDispatch();\n  \n  useEffect(()=>{\n    let unsub = auth.onAuthStateChanged(async(user) =>{\n        dispatch(createuser(user));\n        if(user){\n          let {uid, email} = user;\n          let docRef = firestore.collection(\"users\").doc(uid);\n          let doc = await docRef.get();\n          if(!doc.exists){\n            docRef.set({\n              email,\n            })\n          }\n\n        }\n    });\n\n    return () =>{\n      unsub();\n    }\n  },[])\n\n  let user = useSelector(state => state.user);\n  return (\n    <>\n          \n\n    <Router>\n      {\n        user?\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\n        <div className =\"navbar-brand title-navbar\">ResumeBuilder</div>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse nav-list\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav mr-auto\">\n\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/templates\">Templates</Link>\n            </li>\n            \n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/profile\">Dashboard</Link>\n            </li>\n\n            <li className=\"nav-item\"\n            onClick = {()=>{\n                auth.signOut();\n                <Redirect to=\"/\"/> \n            }}>\n                <a className=\"nav-link\" href=\"#\">Logout</a>\n            </li>\n            </ul>\n        </div>\n      </nav>\n     :\"\"\n      }\n     <Switch>\n        <Route path = \"//\">\n            {\n            <Redirect to =\"/home\"/>\n            }\n        </Route>\n        <Route path = \"/public-preview/:rid\">\n            <PublicPreview/>\n        </Route>\n        <Route path = \"/authentication\">\n          <div className = \"screen-main\">\n            <Form/>\n          </div>\n        </Route>\n        <Route path = \"/profile\"><Profile></Profile></Route>\n        <Route path = \"/home\"><Redirect to=\"/templates\"/></Route>\n        <Route path = \"/templates\"><Templates></Templates></Route>\n        <Route path = \"/personaldata\"><PersonalData/></Route>\n        \n      </Switch>\n    </Router>\n    </>\n    \n    \n  );\n}\n\nexport default App;\n","let initialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone:\"\",\r\n    summary: \"\",\r\n    experience :[],\r\n    education: [],\r\n    skill:[],\r\n    isPublic:false,\r\n}\r\nlet detailsReducer = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case \"SET_DETAILS\":\r\n            return {...state,...action.payload};\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default detailsReducer;","let educationReducer = (state = [],action) =>{\r\n    switch(action.type){\r\n        case \"ADD_EDUCATION\":\r\n            return [...state,action.payload];\r\n        case \"DELETE_EDUCATION\":\r\n            \r\n            let ns = state.filter((s)=>{\r\n                return(s.ednumber !== action.payload)\r\n            });\r\n            return ns\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default educationReducer;","let experienceReducer = (state = [],action) =>{\r\n    switch(action.type){\r\n        case \"ADD_EXPERIENCE\":\r\n            return [...state,action.payload];\r\n        case \"DELETE_EXPERIENCE\":\r\n            let ns = state.filter((s)=>{\r\n                return(s.exnumber !== action.payload)\r\n            });\r\n            return ns\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default experienceReducer;","let initialState = {\r\n    loading : null,\r\n    error : null,\r\n    rid:\"\",\r\n}\r\nexport const saveReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case \"SAVE_RESUME\":\r\n            return {...state,loading : true};\r\n        case \"SAVE_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case \"SAVE_COMPLETED\":\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                rid : action.payload\r\n            }\r\n        \r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","let skillReducer = (state = [],action) =>{\r\n    switch(action.type){\r\n        case \"ADD_SKILL\":\r\n            return [...state,action.payload];\r\n        case \"DELETE_SKILL\":\r\n            {\r\n                let ns = state.filter((st)=>{\r\n                    return (action.payload !== st);\r\n                })\r\n                return ns;\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default skillReducer;","let templateReducer = (state = null,action) =>{\r\n    switch(action.type){\r\n        case \"SET_TEMPLATE\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default templateReducer;","let initialState = {\r\n    loading : null,\r\n    error : null,\r\n}\r\nexport const updateResumeReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case \"UPDATE_RESUME\":\r\n            return {...state,loading : true};\r\n        case \"UPDATE_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case \"UPDATE_COMPLETED\":\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n            }\r\n        \r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","let userReducer = (state = null,action) =>{\r\n    switch(action.type){\r\n        case \"SET_USER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\nimport detailsReducer from \"./reducers/detailsReducer\";\r\nimport educationReducer from \"./reducers/educationReducer\";\r\nimport experienceReducer from \"./reducers/experienceReducer\";\r\nimport { saveReducer } from \"./reducers/saveReducer\";\r\nimport skillReducer from \"./reducers/skillReducers\";\r\nimport templateReducer from \"./reducers/templateReducer\";\r\nimport { updateResumeReducer } from \"./reducers/updateResumeReducer\";\r\nimport  userReducer from \"./reducers/userReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    templateCode : templateReducer,\r\n    user : userReducer,\r\n    details : detailsReducer,\r\n    education : educationReducer,\r\n    experience : experienceReducer,\r\n    skills : skillReducer,\r\n    saveState : saveReducer,\r\n    updateState : updateResumeReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport App from './App';\nimport rootReducer from './redux/CombinedReducer';\nimport thunk from \"redux-thunk\";\nlet mystore = createStore(rootReducer,applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={mystore}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}