{"version":3,"sources":["firebase.js","components/Login.jsx","components/Signup.jsx","components/Form.jsx","redux/actions/userAction.js","redux/actions/templateActions.js","components/Templates.jsx","redux/actions/detailsAction.js","redux/actions/saveActions.js","components/DashboardResmeTemplate.jsx","components/Profile.jsx","components/EducationInput.jsx","redux/actions/educationAction.js","components/ExperienceInput.jsx","redux/actions/experienceAction.js","redux/actions/updateResumeAction.js","components/OptionalButtonsResume.jsx","components/TemplateBreakDown/Name.jsx","components/TemplateBreakDown/Contacts.jsx","components/TemplateBreakDown/ProfessionalSummary.jsx","components/TemplateBreakDown/EducationDetail.jsx","components/TemplateBreakDown/ExperienceDetail.jsx","components/TemplateBreakDown/Skills.jsx","components/ActualTemplate.jsx","components/Preview.jsx","components/PersonalData.jsx","redux/actions/skillsAction.js","components/Home.jsx","components/PublicPreview.jsx","App.js","redux/reducers/detailsReducer.js","redux/reducers/educationReducer.js","redux/reducers/experienceReducer.js","redux/reducers/saveReducer.js","redux/reducers/skillReducers.js","redux/reducers/templateReducer.js","redux/reducers/updateResumeReducer.js","redux/reducers/userReducer.js","redux/CombinedReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","firestore","Login","useState","password","setPassword","email","setEmail","className","type","placeholder","aria-label","aria-describedby","value","onChange","e","currentTarget","class","onClick","signInWithEmailAndPassword","signInWithPopup","Signup","confirmPassword","setConfirmPassword","createUserWithEmailAndPassword","Form","whichForm","setForm","user","useSelector","state","to","createuser","payload","templateCreator","code","Templates","dispatch","useDispatch","history","useHistory","push","src","detailCreator","details","saveCompleteCreator","id","DashboardResmeTemplate","props","data","isVisible","setVisibility","templateCode","firstName","lastName","phone","education","experience","skill","summary","onMouseEnter","onMouseLeave","length","map","ed","schoolname","year","degree","ex","jobTitle","startDate","endDate","description","sk","alert","rid","Profile","datas","setData","useEffect","a","collection","where","uid","get","querysnapshot","docs","dataArr","i","console","log","EducationInput","setSchoolname","setDegree","setYear","isAdded","setStatus","ednumber","edNumber","ed-number","Number","getAttribute","educationAdd","ExperienceInput","setJobTitle","setDescription","setStartDate","setEndDate","exNumber","ex-number","exnumber","updateResumeCreator","OptionalButtonsResume","saveState","isPublic","doc","update","then","catch","err","updateErrorCreator","updateResume","add","docRef","saveErrorCreator","saveResume","checked","for","Name","Contacts","ProfessionalSummary","EducationDetail","ExperienceDetail","Skills","ActualTemplate","Preview","PersonalData","currskill","setSkill","skills","skillsindet","onKeyDown","key","cs","onDoubleClick","innerText","Home","data-toggle","data-target","aria-controls","aria-expanded","signOut","href","path","PublicPreview","useParams","App","unsub","onAuthStateChanged","exists","set","initialState","detailsReducer","action","educationReducer","ns","filter","s","experienceReducer","loading","error","skillReducer","st","templateReducer","userReducer","rootReducer","combineReducers","updateState","mystore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.b0b8775f.chunk.js","sourcesContent":["import firebase from \"../../reels/node_modules/firebase\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBeFuRSOGW0Ry5t6axgVcwBQMTJB0RLlHA\",\r\n    authDomain: \"resume-builder-98dbf.firebaseapp.com\",\r\n    projectId: \"resume-builder-98dbf\",\r\n    storageBucket: \"resume-builder-98dbf.appspot.com\",\r\n    messagingSenderId: \"226987504170\",\r\n    appId: \"1:226987504170:web:66851176ba03687176c953\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nlet provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const signInWithGoogle = () =>{\r\n    auth.signInWithPopup(provider);\r\n}\r\n\r\nexport const firestore = firebase.firestore();\r\n\r\n","import { useState } from \"react\";\r\nimport { auth,signInWithGoogle } from \"../firebase\";\r\nimport \"./css/Login.css\";\r\nlet Login = () =>{\r\n    let [password,setPassword] = useState(\"\");\r\n    let [email,setEmail] = useState(\"\");\r\n\r\n    \r\n    return(\r\n        <div className = \"login-container\">\r\n\r\n            <div className = \"text-display\">Welcome back!</div>\r\n            <div className=\"input-group \">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Email address\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {email}\r\n                onChange = {(e)=>{\r\n                    setEmail(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Password\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {password}\r\n                onChange = {(e)=>{\r\n                    setPassword(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary login-button\"\r\n            onClick = {()=>{\r\n               auth.signInWithEmailAndPassword(email,password);\r\n            }}>Login</button>\r\n            <button type=\"button\" class=\"btn btn-primary google-button\"\r\n            onClick={()=>{\r\n                signInWithGoogle();\r\n            }}>Sign in with Google</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import { useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nlet Signup = () =>{\r\n    let [password,setPassword] = useState(\"\");\r\n    let [confirmPassword,setConfirmPassword] = useState(\"\");\r\n    let [email,setEmail] = useState(\"\");\r\n\r\n    return(\r\n        <div className = \"login-container\">\r\n\r\n            <div className = \"text-display\">Register and Build</div>\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control email-input\" placeholder=\"Email address\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {email}\r\n                onChange = {(e)=>{\r\n                    setEmail(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control password-input\" placeholder=\"Password\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {password}\r\n                onChange = {(e)=>{\r\n                    setPassword(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n                <input type=\"text\" className=\"form-control password-input\" placeholder=\"Confirm password\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"\r\n                value = {confirmPassword}\r\n                onChange = {(e)=>{\r\n                    setConfirmPassword(e.currentTarget.value);\r\n                }}/>\r\n            </div>\r\n\r\n            <button type=\"button\" class=\"btn btn-primary login-button\"\r\n            onClick = {()=>{\r\n                if(password !== \"\" && password === confirmPassword){\r\n                    auth.createUserWithEmailAndPassword(email,password);\r\n                }\r\n            }}>Signup</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup;","import { useState } from \"react\"\r\nimport \"./css/Form.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Login from \"./Login\"\r\nimport Signup from \"./Signup\"\r\nimport {Redirect} from \"react-router-dom\"\r\nlet Form = () =>{\r\n    let [whichForm,setForm] = useState(\"login\");\r\n    let user = useSelector(state => state.user);\r\n    return(\r\n        <>\r\n        {user?<Redirect to = \"/\"/>:\"\"}\r\n        <div className = \"form-container\">\r\n            <div className = \"form-display\"></div>\r\n            <div className = \"form-section\">\r\n                <div className = \"option-section\">\r\n                    <div className = {`login-option option ${whichForm == \"login\"?\"selected-option\" : \"\"}`}\r\n                        onClick = {\r\n                            ()=>{\r\n                                setForm(\"login\");\r\n                            }\r\n                        }>Login</div>\r\n                    <div className = {`signup-option option ${whichForm == \"signup\"?\"selected-option\" : \"\"}`}\r\n                        onClick = {\r\n                            ()=>{\r\n                                setForm(\"signup\");\r\n                            }\r\n                        }>Signup</div>\r\n                </div>\r\n\r\n                {whichForm == \"login\"? <Login></Login> : <Signup></Signup>}\r\n                \r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form;","export const createuser = (user)=>{\r\n    return({\r\n        type : \"SET_USER\",\r\n        payload : user,\r\n    })\r\n}\r\n\r\n","export const templateCreator = (code)=>{\r\n    return({\r\n        type : \"SET_TEMPLATE\",\r\n        payload : code,\r\n    })\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { templateCreator } from \"../redux/actions/templateActions\";\r\nimport \"./css/Templates.css\"\r\nlet Templates = () =>{\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    return(\r\n        <div className = \"template-container\">\r\n                <div className = \"template template1\" \r\n                onClick={()=>{\r\n                    history.push(\"/personaldata\");\r\n                    dispatch(templateCreator(\"A\"))\r\n                }}>\r\n                    <img src=\"http://localhost:3000/template1.svg\"/>\r\n                </div>\r\n                <div className = \"template template2\"\r\n                onClick={()=>{\r\n                    history.push(\"/personaldata\");\r\n                    dispatch(templateCreator(\"B\"))\r\n                }}>\r\n                    <img src=\"http://localhost:3000/template2.svg\"/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Templates;","export const detailCreator = (details) => {\r\n    return {\r\n      type: \"SET_DETAILS\",\r\n      payload: details,\r\n    };\r\n};","import { firestore } from \"../../firebase\"\r\n\r\nexport const saveResumeCreator = () =>{\r\n    return{\r\n        type : \"SAVE_RESUME\"\r\n    }\r\n}\r\n\r\nexport const saveErrorCreator = (err) =>{\r\n    return{\r\n        type : \"SAVE_ERROR\",\r\n        payload : err,\r\n    }\r\n}\r\nexport const saveCompleteCreator = (id) =>{\r\n    return{\r\n        type : \"SAVE_COMPLETED\",\r\n        payload : id,\r\n    }\r\n}\r\n\r\nexport const saveResume =(uid,details,code)=>{\r\n    return (dispatch) =>{\r\n        dispatch(saveResumeCreator());\r\n\r\n        firestore.collection(\"resumes\").add({\r\n            uid,\r\n            details,\r\n            code\r\n        }).then((docRef)=>{\r\n            return docRef.get();\r\n        }).then((doc)=>{\r\n            dispatch(saveCompleteCreator(doc.id));\r\n        }).catch((err)=>{\r\n            dispatch(saveErrorCreator(err));\r\n        })\r\n    }\r\n}","import { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./css/Preview.css\"\r\nimport \"./TemplateBreakDown/TemplateBreakDown.css\"\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { saveCompleteCreator } from \"../redux/actions/saveActions\";\r\nimport { templateCreator } from \"../redux/actions/templateActions\";\r\nimport { useState } from \"react\";\r\n\r\nlet DashboardResmeTemplate = (props) =>{\r\n    let dispatch = useDispatch();\r\n    let history = useHistory();\r\n    let {code,details} = props.data;\r\n    let [isVisible,setVisibility] = useState(false);\r\n    let templateCode = code;\r\n    let {firstName,lastName,email,phone,education,experience,skill,summary} = details;\r\n    return(\r\n        <div className = \"dashboard-preview-resume-container\" \r\n        onMouseEnter = {()=>{\r\n            setVisibility(true);\r\n        }}\r\n        onMouseLeave = {()=>{\r\n            setVisibility(false);\r\n        }}>\r\n        <div className = {`preview-resume template-${templateCode}`}\r\n        >\r\n            <div className = {`resume-header resume-section template-${templateCode}`}>\r\n                <div className = {`resume-name template-${templateCode}`}>\r\n                    <span>{firstName + \" \" + lastName}</span>\r\n                </div>\r\n                <div className = {`employee-contacts`}>\r\n                    <span>{email}</span>\r\n                    {email === \"\" || phone === \"\"?\"\": <span> | </span>}\r\n                    <span>{phone}</span>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className ={`resume-body resume-section template-${templateCode}`}> \r\n                {\r\n                    summary === \"\"?\"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">{templateCode ===\"A\"?\"Summary\":\"Professional Summary\"}</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        \r\n                        <div className = \"detail\">{summary}</div>\r\n                    </div> \r\n                }\r\n                {\r\n                    education.length == 0 ? \"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">Education</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        <div className = \"detail-box\">\r\n                        {\r\n                            education.map((ed) => {\r\n                                return(<>\r\n                                    \r\n                                    <div className =\"detail-per-box\">\r\n                                        <div className=\"detail-heading\">{ed.schoolname}, {ed.year}</div>\r\n                                        <div className =\"detail\">{ed.degree}</div>\r\n                                    </div>\r\n                                    \r\n                                        \r\n                                    \r\n                                    \r\n                                </>)\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    experience.length == 0 ? \"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">Education</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        <div  className = \"detail-box\">\r\n                        {\r\n                            experience.map((ex) => {\r\n                                return(<>\r\n                                    \r\n                                    <div className =\"detail-per-box\">\r\n                                        <div className=\"detail-heading\">{ex.jobTitle}, {ex.startDate + \"-\" + ex.endDate}</div>\r\n                                        <div className =\"detail\">{ex.description}</div>\r\n                                    </div>\r\n                                    \r\n                                        \r\n                                    \r\n                                    \r\n                                </>)\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    skill.length == 0?\"\":\r\n                    <div className ={`detail-groups template-${templateCode}`}>\r\n                        <div className = \"section-heading\">Tech Skills</div>\r\n                        {\r\n                            templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n                        }\r\n                        <div className = {`skill-preview-group template-${templateCode}`}>\r\n                            {\r\n                                skill.map((sk) => {\r\n                                    return(<>\r\n                                        <div className ={`skill-preview template-${templateCode}`}>{sk}</div>                          \r\n                                    </>)\r\n                                })\r\n                            }\r\n                        </div>\r\n                        \r\n                    </div>\r\n                }\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n\r\n        {\r\n            !isVisible?\"\":\r\n            <>\r\n                <div className = \"option-button link-button\"\r\n                onClick ={()=>{\r\n                    alert(`localhost:3000/public-preview/${props.data.rid}`);\r\n                }}>\r\n                    <span class=\"material-icons-outlined\">link</span>\r\n                </div>\r\n\r\n                <div className = \"option-button change-button\"\r\n                onClick ={()=>{\r\n                    dispatch(detailCreator({...details}));\r\n                    dispatch(saveCompleteCreator(props.data.rid));\r\n                    dispatch(templateCreator(templateCode))\r\n                    history.push(\"/personaldata\");\r\n                }}>\r\n                    <span class=\"material-icons-outlined\">settings</span>\r\n                </div>\r\n            </>\r\n        }\r\n        </div>\r\n    )\r\n\r\n     \r\n}\r\n\r\nexport default DashboardResmeTemplate;","import { useEffect, useState } from \"react\";\r\nimport \"./css/Dashboard.css\"\r\nimport {firestore} from \"../firebase\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DashboardResmeTemplate from \"./DashboardResmeTemplate\";\r\nlet Profile = () =>{\r\n    \r\n    let [datas,setData] = useState(null);\r\n    let user = useSelector(state => state.user);\r\n    useEffect(async()=>{\r\n        if(user){\r\n            let querysnapshot = await  firestore.collection(\"resumes\").where('uid', \"==\" ,user.uid).get();\r\n            let docs = querysnapshot.docs;\r\n            let dataArr = [];\r\n            for(let i = 0;i<docs.length;i++){\r\n                \r\n                dataArr.push({...docs[i].data(),rid:docs[i].id});\r\n            }\r\n            \r\n            setData(dataArr);\r\n            console.log(datas);\r\n        }\r\n        \r\n    },[])\r\n    return(\r\n        <div className = \"dashboard-container\">\r\n            {   \r\n            datas?\r\n                <>\r\n                {console.log(datas)}\r\n                <div className = \"dashobard-header\">\r\n                    <div>DashBoard</div>\r\n                </div>\r\n                <div className =\"line-breaker\"></div>\r\n\r\n                <div className =\"template-all\">\r\n\r\n                    \r\n                    {\r\n                    datas.map((data)=>{\r\n                        return(\r\n                            <DashboardResmeTemplate data = {data}/>\r\n                        )\r\n                    })\r\n                    }\r\n                    \r\n\r\n                </div>\r\n            </>\r\n            :\"\"\r\n            }\r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { educationAdd, educationDelete } from \"../redux/actions/educationAction\";\r\n\r\nlet EducationInput = (props) =>{\r\n    let {education} = useSelector(state => state);\r\n    \r\n    let [schoolname,setSchoolname] = useState(\"\");\r\n    let [degree,setDegree] = useState(\"\");\r\n    let [year,setYear] = useState(\"\");\r\n    let[isAdded,setStatus] = useState(false);\r\n    let dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        console.log(\"try\");\r\n        console.log(education);\r\n        for(let i = 0;i<education.length;i++){\r\n            if(education[i].ednumber == props.edNumber){\r\n                console.log(\"anything\");\r\n                setSchoolname(education[i].schoolname);\r\n                setDegree(education[i].degree);\r\n                setYear(education[i].year);\r\n                setStatus(true);\r\n                break;\r\n            }\r\n        }\r\n    },[]);\r\n    useEffect(()=>{\r\n        console.log(education);\r\n        dispatch(detailCreator({education}));\r\n        \r\n    },[education]);\r\n    return(\r\n        <>\r\n            <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Institution name\"\r\n                value = {schoolname}\r\n                onChange={(e)=>{\r\n                    setSchoolname(e.currentTarget.value);\r\n                }}/>\r\n\r\n            <div className = \"detail-group\">    \r\n           \r\n            \r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Passing year\"\r\n                value = {year}\r\n                onChange={(e)=>{\r\n                    setYear(e.currentTarget.value);\r\n                }}/>\r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Degree\"\r\n               value = {degree}\r\n               onChange={(e)=>{\r\n                   setDegree(e.currentTarget.value);\r\n               }}/>\r\n\r\n\r\n            {\r\n               !isAdded?\r\n                    <div className =\"text-button\"\r\n                    onClick = {()=>{\r\n                        if(schoolname === \"\" || year === \"\" || degree === \"\") return;\r\n                        setStatus(true);\r\n                        dispatch(educationAdd({ednumber:props.edNumber,schoolname,degree,year}));\r\n                    }}>Confirm</div>\r\n                    \r\n                :\r\n\r\n                    <div className =\"text-button delete-text-button\" ed-number ={props.edNumber} \r\n                    onClick = {(e)=>{\r\n                        setDegree(\"\");\r\n                        setSchoolname(\"\");\r\n                        setYear(\"\");\r\n                        \r\n                        setStatus(false);\r\n                        dispatch(educationDelete(Number(e.currentTarget.getAttribute(\"ed-number\"))));\r\n                    }}>Empty</div>\r\n                }\r\n          \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EducationInput;","export const educationAdd = (education)=>{\r\n    return{\r\n        type: \"ADD_EDUCATION\",\r\n        payload:education\r\n    }\r\n}\r\n\r\nexport const educationDelete = (position) =>{\r\n    return{\r\n        type: \"DELETE_EDUCATION\",\r\n        payload: position\r\n    }\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { experienceAdd, experienceDelete } from \"../redux/actions/experienceAction\";\r\n\r\nlet ExperienceInput = (props) =>{\r\n    let [jobTitle,setJobTitle] = useState(\"\");\r\n    let [description,setDescription] = useState(\"\");\r\n    let [startDate,setStartDate] = useState(\"\");\r\n    let [endDate,setEndDate] = useState(\"\");\r\n    let [isAdded,setStatus] = useState(false);\r\n\r\n    let dispatch = useDispatch();\r\n    let {experience} = useSelector(state => state);\r\n\r\n    useEffect(()=>{\r\n\r\n        for(let i = 0;i<experience.length;i++){\r\n            if(experience[i].ednumber == props.exNumber){\r\n                setJobTitle(experience[i].jobTitle);\r\n                setDescription(experience[i].description);\r\n                setStartDate(experience[i].startDate);\r\n                setEndDate(experience[i].endDate);\r\n                setStatus(true);\r\n                break;\r\n            }\r\n        }\r\n    },[]);\r\n    useEffect(()=>{\r\n        console.log(experience);\r\n        dispatch(detailCreator({experience}));\r\n    },[experience]);\r\n\r\n\r\n    return(\r\n        <>\r\n            <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Job title\"\r\n                value = {jobTitle}\r\n                onChange={(e)=>{\r\n                    setJobTitle(e.currentTarget.value);\r\n                }}/>\r\n\r\n            <textarea type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Summary\"\r\n               value = {description}\r\n               onChange={(e)=>{\r\n                   setDescription(e.currentTarget.value);\r\n               }} />        \r\n            <div className = \"detail-group\">    \r\n           \r\n                \r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Start Date\"\r\n                value = {startDate}\r\n                onChange={(e)=>{\r\n                    setStartDate(e.currentTarget.value);\r\n                }}/>\r\n                <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"End Date\"\r\n               value = {endDate}\r\n               onChange={(e)=>{\r\n                   setEndDate(e.currentTarget.value);\r\n               }}/>\r\n\r\n\r\n               {\r\n               !isAdded?\r\n                    <div className =\"text-button\"\r\n                    onClick = {()=>{\r\n                        if(jobTitle === \"\" || description === \"\" || startDate === \"\" || endDate === \"\") return;\r\n                        setStatus(true);\r\n                        dispatch(experienceAdd({exnumber:props.exNumber,jobTitle,description,startDate,endDate}));\r\n                    }}>Confirm</div>\r\n                    \r\n                :\r\n\r\n                    <div className =\"text-button delete-text-button\" ex-number ={props.exNumber} \r\n                    onClick = {(e)=>{\r\n                        setStatus(false);\r\n                        setJobTitle(\"\");\r\n                        setDescription(\"\");\r\n                        setEndDate(\"\");\r\n                        setStartDate(\"\");\r\n                        dispatch(experienceDelete(Number(e.currentTarget.getAttribute(\"ex-number\"))));\r\n                    }}>Remove</div>\r\n                }\r\n          \r\n       </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExperienceInput;","export const experienceAdd = (education)=>{\r\n    return{\r\n        type: \"ADD_EXPERIENCE\",\r\n        payload:education\r\n    }\r\n}\r\n\r\nexport const experienceDelete = (position) =>{\r\n    return{\r\n        type: \"DELETE_EXPERIENCE\",\r\n        payload: position\r\n    }\r\n}","import { firestore } from \"../../firebase\"\r\n\r\nexport const updateResumeCreator = () =>{\r\n    return{\r\n        type : \"UPDATE_RESUME\"\r\n    }\r\n}\r\n\r\nexport const updateErrorCreator = (err) =>{\r\n    return{\r\n        type : \"UPDATE_ERROR\",\r\n        payload : err,\r\n    }\r\n}\r\nexport const updateCompleteCreator = () =>{\r\n    return{\r\n        type : \"UPDATE_COMPLETED\",\r\n    }\r\n}\r\n\r\nexport const updateResume = (rid,details,code) =>{\r\n    return (dispatch) =>{\r\n        dispatch(updateResumeCreator);\r\n\r\n        firestore.collection(\"resumes\").doc(rid).update(\r\n            {\r\n                details,\r\n                code,\r\n            }\r\n        ).then(()=>{\r\n            dispatch(updateCompleteCreator());\r\n        }).catch((err)=>{\r\n            dispatch(updateErrorCreator(err));\r\n        })\r\n    }\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { saveResume } from \"../redux/actions/saveActions\";\r\nimport { updateResume } from \"../redux/actions/updateResumeAction\";\r\n\r\nlet OptionalButtonsResume = () =>{\r\n    let dispatch = useDispatch();\r\n\r\n    let details = useSelector(state => state.details);\r\n    let user = useSelector(state => state.user);\r\n    let uid;\r\n    if(user)\r\n        uid = user.uid;\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    let saveState = useSelector(state => state.saveState);\r\n    let isPublic = details.isPublic;\r\n    return(\r\n        <div className = \"optional-buttons\">\r\n            {\r\n                saveState.rid === \"\"?\"\":\r\n                <button type=\"button\" class=\"btn btn-light\"\r\n                    onClick = {\r\n                        ()=>{\r\n                            dispatch(updateResume(saveState.rid,details,templateCode));\r\n                        }\r\n                    }>Save same to Database</button>\r\n            }\r\n            <button type=\"button\" class=\"btn btn-light\"\r\n            onClick = {\r\n                ()=>{\r\n                    dispatch(saveResume(uid,details,templateCode))\r\n                }\r\n            }>Save new to Database</button>\r\n            <button type=\"button\" class=\"btn btn-light\">Download PDF</button>\r\n            {\r\n                !isPublic?\"\":\r\n                <button type=\"button\" class=\"btn btn-light\"\r\n                    onClick ={\r\n                        ()=>{\r\n                            if(saveState.rid === \"\"){\r\n                                alert(\"TO generate Link, Save to database\");\r\n                            }else{\r\n                            alert(`localhost:3000/public-preview/${saveState.rid}`);\r\n                            }\r\n                            \r\n                        }\r\n                    }>Generate Link</button>\r\n            }\r\n            \r\n            <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\"\r\n                checked = {isPublic}\r\n                onClick = {\r\n                    ()=>{\r\n                        let np = isPublic?false:true;\r\n                        dispatch(detailCreator({ isPublic: np}))\r\n                    }\r\n                }/>\r\n                <label class=\"form-check-label\" for=\"flexCheckDefault\">\r\n                    Make Public\r\n                </label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionalButtonsResume;","import { useSelector } from \"react-redux\";\r\n\r\nlet Name = () =>{\r\n\r\n    let {firstName,lastName} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className = {`resume-name template-${templateCode}`}>\r\n            <span>{firstName + \" \" + lastName}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Name;","import { useSelector } from \"react-redux\";\r\n\r\nlet Contacts = () =>{\r\n    let {email,phone} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className = {`employee-contacts`}>\r\n            <span>{email}</span>\r\n            {email === \"\" || phone === \"\"?\"\": <span> | </span>}\r\n            <span>{phone}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import { useSelector } from \"react-redux\"\r\n\r\nlet ProfessionalSummary = () =>{\r\n    let {summary} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">{templateCode ===\"A\"?\"Summary\":\"Professional Summary\"}</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            \r\n            <div className = \"detail\">{summary}</div>\r\n        </div>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ProfessionalSummary","import { useSelector } from \"react-redux\";\r\n\r\nlet EducationDetail = () =>{\r\n    let {education} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">Education</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            <div className = \"detail-box\">\r\n            {\r\n                education.map((ed) => {\r\n                    return(<>\r\n                        \r\n                        <div className =\"detail-per-box\">\r\n                            <div className=\"detail-heading\">{ed.schoolname}, {ed.year}</div>\r\n                            <div className =\"detail\">{ed.degree}</div>\r\n                        </div>\r\n                        \r\n                            \r\n                        \r\n                        \r\n                    </>)\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationDetail;","import { useSelector } from \"react-redux\";\r\n\r\nlet ExperienceDetail = () =>{\r\n    let {experience} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">Education</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            <div  className = \"detail-box\">\r\n            {\r\n                experience.map((ex) => {\r\n                    return(<>\r\n                        \r\n                        <div className =\"detail-per-box\">\r\n                            <div className=\"detail-heading\">{ex.jobTitle}, {ex.startDate + \"-\" + ex.endDate}</div>\r\n                            <div className =\"detail\">{ex.description}</div>\r\n                        </div>\r\n                        \r\n                            \r\n                        \r\n                        \r\n                    </>)\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExperienceDetail;","import { useSelector } from \"react-redux\";\r\n\r\nlet Skills = () =>{\r\n    let {skill} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className ={`detail-groups template-${templateCode}`}>\r\n            <div className = \"section-heading\">Tech Skills</div>\r\n            {\r\n                templateCode === \"A\"?\"\": <div className = \"line-breaker\"></div>\r\n            }\r\n            <div className = {`skill-preview-group template-${templateCode}`}>\r\n                {\r\n                    skill.map((sk) => {\r\n                        return(<>\r\n                              <div className ={`skill-preview template-${templateCode}`}>{sk}</div>                          \r\n                        </>)\r\n                    })\r\n                }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills","import \"./css/Preview.css\"\r\nimport Name from \"./TemplateBreakDown/Name\"\r\nimport Contacts from \"./TemplateBreakDown/Contacts\"\r\nimport ProfessionalSummary from \"./TemplateBreakDown/ProfessionalSummary.jsx\"\r\nimport EducationDetail from \"./TemplateBreakDown/EducationDetail.jsx\";\r\nimport \"./TemplateBreakDown/TemplateBreakDown.css\"\r\nimport { useSelector } from \"react-redux\"\r\nimport ExperienceDetail from \"./TemplateBreakDown/ExperienceDetail\";\r\nimport Skills from \"./TemplateBreakDown/Skills\";\r\nlet ActualTemplate = () =>{\r\n    let {summary,education,experience,skill} = useSelector(state => state.details);\r\n    let templateCode = useSelector(state => state.templateCode);\r\n    return(\r\n        <div className = {`preview-resume template-${templateCode}`}>\r\n            <div className = {`resume-header resume-section template-${templateCode}`}>\r\n                <Name/>\r\n                <Contacts/>\r\n            </div>\r\n            \r\n            <div className ={`resume-body resume-section template-${templateCode}`}> \r\n                {\r\n                    summary === \"\"?\"\":<ProfessionalSummary/>   \r\n                }\r\n                {\r\n                    education.length == 0 ? \"\": <EducationDetail/>\r\n                }\r\n                {\r\n                    experience.length == 0 ? \"\": <ExperienceDetail/>\r\n                }\r\n                {\r\n                    skill.length == 0?\"\":<Skills/>\r\n                }\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActualTemplate;","import \"./css/Preview.css\"\r\nimport \"./TemplateBreakDown/TemplateBreakDown.css\"\r\nimport OptionalButtonsResume from \"./OptionalButtonsResume\";\r\nimport ActualTemplate from \"./ActualTemplate\";\r\nlet Preview = () =>{\r\n    return(\r\n        <div className = \"preview-container\">\r\n            <div className = \"editing-preview-resume-container\">\r\n                <ActualTemplate></ActualTemplate> \r\n            </div>\r\n            \r\n            <OptionalButtonsResume />        \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Preview;","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport EducationInput from \"./EducationInput\";\r\nimport ExperienceInput from \"./ExperienceInput.jsx\";\r\nimport \"./css/PersonalData.css\"\r\nimport Preview from \"./Preview\"\r\nimport { useEffect, useState } from \"react\";\r\nimport { skillAdd, skillDelete } from \"../redux/actions/skillsAction\";\r\nlet PersonalData = ()=>{\r\n    let [currskill,setSkill] = useState(\"\");\r\n    let dispatch = useDispatch();\r\n    let {skills,details} = useSelector(state => state);\r\n    let {firstName,lastName,email,phone,summary} = details;\r\n    let skillsindet = details.skill\r\n    useEffect(()=>{\r\n        dispatch(detailCreator({skill:skills}));\r\n        \r\n    },[skills]);\r\n    return(\r\n        <>\r\n        <div className=\"personal-container\">\r\n            \r\n            <div className = \"personal-form\">\r\n                \r\n                <div className = \"personal-details detail-section\">\r\n                    <div className = \"heading\">Personal Details</div>\r\n                    <div className = \"detail-group\">\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"First Name\"\r\n                            value = {firstName}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({firstName:e.currentTarget.value}))\r\n                            }}/>\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Last Name\"\r\n                            value = {lastName}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({lastName:e.currentTarget.value}))\r\n                            }}/>\r\n                    </div>\r\n\r\n                    <div className = \"detail-group\">\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Email address\"\r\n                            value = {email}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({email:e.currentTarget.value}))\r\n                            }}/>\r\n                        <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Phone number\"\r\n                            value = {phone}\r\n                            onChange={(e)=>{\r\n                                dispatch(detailCreator({phone:e.currentTarget.value}))\r\n                            }}/>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className = \"summary-professional detail-section\">\r\n                    <div className = \"heading\">Professional summary</div>\r\n                    <textarea type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Description\"\r\n                    value = {summary}\r\n                    onChange={(e)=>{\r\n                        dispatch(detailCreator({summary:e.currentTarget.value}))\r\n                    }}/>\r\n                </div>\r\n\r\n                <div className = \"education detail-section\">\r\n                    <div className = \"heading-and-button\">\r\n                        <div className = \"heading\">Education</div>\r\n                        <div className = \"text-button\" \r\n                        onClick = {()=>{\r\n                            \r\n                        }}>Add more</div>\r\n                    </div>\r\n                    \r\n                    <EducationInput edNumber = {0}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <EducationInput edNumber = {1}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <EducationInput edNumber = {2}/>\r\n                </div>\r\n\r\n                <div className = \"experience detail-section\">\r\n                    <div className = \"heading\">Experience</div>\r\n                    <ExperienceInput exNumber = {0}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <ExperienceInput exNumber = {1}/>\r\n                    <div className = \"line-breaker\"></div>\r\n                    <ExperienceInput exNumber = {2}/>\r\n                </div>\r\n\r\n                <div className = \"skills detail-section\">\r\n                    <div className = \"heading\">Skills (Upto 15)</div>\r\n                    <input type=\"text\" className=\"form-control custom-form-control\" placeholder=\"Enter skills\"\r\n                    value = {currskill}\r\n                    onChange={(e)=>{\r\n                        \r\n                        setSkill(e.currentTarget.value);\r\n                    }}\r\n                    \r\n                    onKeyDown = {(e)=>{\r\n                        if(e.key != \"Enter\" || currskill ===\"\") return;\r\n                        if(skills.length >= 15){\r\n                            alert(\"More than 15 skills not allowed\");\r\n                            return;\r\n                        }\r\n                        setSkill(\"\");\r\n                        dispatch(skillAdd(currskill));\r\n                        \r\n                    }}/>\r\n\r\n                    <div className = \"detail-group skill-inputs\">\r\n                        {\r\n                        skillsindet.map((cs)=>{\r\n                            return(\r\n                                <div className =\"skill-div\"\r\n                                onDoubleClick = {\r\n                                    (e)=>{\r\n                                        dispatch(skillDelete(e.currentTarget.innerText));\r\n                                    }\r\n                                }>{cs}</div>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            <Preview/>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PersonalData;","export const skillAdd = (skill)=>{\r\n    return{\r\n        type: \"ADD_SKILL\",\r\n        payload:skill\r\n    }\r\n}\r\n\r\nexport const skillDelete = (skill) =>{\r\n    return{\r\n        type: \"DELETE_SKILL\",\r\n        payload: skill\r\n    }\r\n}","import { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Templates from \"./Templates\";\r\nimport Profile from \"./Profile\";\r\nimport \"./css/NavBar.css\"\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { auth } from \"../firebase\";\r\nimport PersonalData from \"./PersonalData\";\r\n\r\nlet Home = () =>{\r\n    let user = useSelector(state => state.user);\r\n    return(\r\n        <>\r\n            {user ?\"\":<Redirect to=\"/authentication\"/>}\r\n        <Router>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n            <div className =\"navbar-brand title-navbar\">ResumeBuilder</div>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse nav-list\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/templates\">Templates</Link>\r\n                </li>\r\n                \r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/profile\">Dashboard</Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\"\r\n                onClick = {()=>{\r\n                   auth.signOut();\r\n                }}>\r\n                    <a className=\"nav-link\" href=\"#\">Logout</a>\r\n                </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n        <Switch>\r\n            <Route path = \"//\"><Redirect to=\"/templates\"/></Route>\r\n            <Route path = \"/templates\"><Templates></Templates></Route>\r\n            <Route path = \"/profile\"><Profile></Profile></Route>\r\n            <Route path = \"/personaldata\">\r\n            <PersonalData/>\r\n        </Route>\r\n        </Switch>\r\n            \r\n        </Router>\r\n        </>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Home;","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { firestore } from \"../firebase\";\r\nimport { detailCreator } from \"../redux/actions/detailsAction\";\r\nimport { templateCreator } from \"../redux/actions/templateActions\";\r\nimport ActualTemplate from \"./ActualTemplate\";\r\n\r\nlet PublicPreview = ()=>{\r\n    let {rid} = useParams();\r\n\r\n    let dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        firestore.collection(\"resumes\").doc(rid).get().then((doc)=>{\r\n            let data = doc.data();\r\n            if(data){\r\n                dispatch(detailCreator({...data.details}));\r\n                dispatch(templateCreator(data.code));\r\n            }\r\n        })\r\n    },[]);\r\n\r\n\r\n    return(\r\n        <div className = \"preview-container-public\">\r\n            <div className = \"editing-preview-resume-container\">\r\n                <ActualTemplate/>\r\n            </div>\r\n            \r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default PublicPreview;","import Form from \"./components/Form\";\nimport \"./components/css/App.css\"\nimport { useEffect } from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport { auth, firestore } from \"./firebase\";\nimport {createuser} from \"./redux/actions/userAction\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport PublicPreview from \"./components/PublicPreview\";\nlet App = () => {\n  let dispatch = useDispatch();\n  useEffect(()=>{\n    let unsub = auth.onAuthStateChanged(async(user) =>{\n        dispatch(createuser(user));\n        if(user){\n          let {uid, email} = user;\n          let docRef = firestore.collection(\"users\").doc(uid);\n          let doc = await docRef.get();\n          if(!doc.exists){\n            docRef.set({\n              email,\n            })\n          }\n\n        }\n    });\n\n    return () =>{\n      unsub();\n    }\n  },[])\n  return (\n    <>\n    <Router>\n      <Switch>\n        <Route path = \"/public-preview/:rid\">\n            <PublicPreview/>\n        </Route>\n        <Route path = \"/authentication\">\n          <div className = \"screen-main\">\n            <Form/>\n          </div>\n        </Route>\n        <Route path = \"/\">\n            <Home/>\n        </Route>\n       \n        \n      </Switch>\n    </Router>\n    </>\n    \n    \n  );\n}\n\nexport default App;\n","let initialState = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone:\"\",\r\n    summary: \"\",\r\n    experience :[],\r\n    education: [],\r\n    skill:[],\r\n    isPublic:false,\r\n}\r\nlet detailsReducer = (state = initialState,action)=>{\r\n    switch(action.type){\r\n        case \"SET_DETAILS\":\r\n            return {...state,...action.payload};\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default detailsReducer;","let educationReducer = (state = [],action) =>{\r\n    switch(action.type){\r\n        case \"ADD_EDUCATION\":\r\n            return [...state,action.payload];\r\n        case \"DELETE_EDUCATION\":\r\n            \r\n            let ns = state.filter((s)=>{\r\n                return(s.ednumber !== action.payload)\r\n            });\r\n            return ns\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default educationReducer;","let experienceReducer = (state = [],action) =>{\r\n    switch(action.type){\r\n        case \"ADD_EXPERIENCE\":\r\n            return [...state,action.payload];\r\n        case \"DELETE_EXPERIENCE\":\r\n            let ns = state.filter((s)=>{\r\n                return(s.exnumber !== action.payload)\r\n            });\r\n            return ns\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default experienceReducer;","let initialState = {\r\n    loading : null,\r\n    error : null,\r\n    rid:\"\",\r\n}\r\nexport const saveReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case \"SAVE_RESUME\":\r\n            return {...state,loading : true};\r\n        case \"SAVE_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case \"SAVE_COMPLETED\":\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                rid : action.payload\r\n            }\r\n        \r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","let skillReducer = (state = [],action) =>{\r\n    switch(action.type){\r\n        case \"ADD_SKILL\":\r\n            return [...state,action.payload];\r\n        case \"DELETE_SKILL\":\r\n            {\r\n                let ns = state.filter((st)=>{\r\n                    return (action.payload !== st);\r\n                })\r\n                return ns;\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default skillReducer;","let templateReducer = (state = null,action) =>{\r\n    switch(action.type){\r\n        case \"SET_TEMPLATE\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default templateReducer;","let initialState = {\r\n    loading : null,\r\n    error : null,\r\n}\r\nexport const updateResumeReducer = (state = initialState,action) =>{\r\n    switch(action.type){\r\n        case \"UPDATE_RESUME\":\r\n            return {...state,loading : true};\r\n        case \"UPDATE_ERROR\":\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error:action.payload\r\n            }\r\n        case \"UPDATE_COMPLETED\":\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n            }\r\n        \r\n        default :\r\n            return state;\r\n    }\r\n}\r\n","let userReducer = (state = null,action) =>{\r\n    switch(action.type){\r\n        case \"SET_USER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from \"redux\";\r\nimport detailsReducer from \"./reducers/detailsReducer\";\r\nimport educationReducer from \"./reducers/educationReducer\";\r\nimport experienceReducer from \"./reducers/experienceReducer\";\r\nimport { saveReducer } from \"./reducers/saveReducer\";\r\nimport skillReducer from \"./reducers/skillReducers\";\r\nimport templateReducer from \"./reducers/templateReducer\";\r\nimport { updateResumeReducer } from \"./reducers/updateResumeReducer\";\r\nimport  userReducer from \"./reducers/userReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    templateCode : templateReducer,\r\n    user : userReducer,\r\n    details : detailsReducer,\r\n    education : educationReducer,\r\n    experience : experienceReducer,\r\n    skills : skillReducer,\r\n    saveState : saveReducer,\r\n    updateState : updateResumeReducer\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport App from './App';\nimport rootReducer from './redux/CombinedReducer';\nimport thunk from \"redux-thunk\";\nlet mystore = createStore(rootReducer,applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={mystore}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}